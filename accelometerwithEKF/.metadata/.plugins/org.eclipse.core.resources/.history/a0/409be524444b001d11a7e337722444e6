/*
 * kalmanfilter.c
 *
 *  Created on: 14 Eki 2022
 *      Author: fkaanuslu
 */
#include "kalmanfilter.h"

extern    float _err_measure; //w_k değerim
extern    float _err_estimate; // prediction error
extern    float _q;//w_k değerinin covariancesi
extern    float _current_estimate = 0; // başlagıç current estimate'im
extern    float _last_estimate = 0; // last estimate'im
extern    float _kalman_gain = 0; // kalman gain'im




void SimpleKalmanFilter(float mea_e, float est_e, float q)
{
  _err_measure=mea_e; //
  _err_estimate=est_e;
  _q = q;
}

float updateEstimate(float mea)
{
   _kalman_gain = _err_estimate / (_err_estimate + _err_measure);
   // g_k = p_k / p_k + r

   _current_estimate = _last_estimate + _kalman_gain * (mea - _last_estimate);
   // x_hat_k = x_hat_k_last + g_k * (z_k - x_hat_k_last)


   _err_estimate =  (1.0 - _kalman_gain)*_err_estimate + fabs(_last_estimate - _current_estimate)*_q;
   // p_k = (1 - g_k) * p_k + |x_hat_k_last - x_hat_k| * q

   _last_estimate = _current_estimate;
  // x_hat_k_prev = x_hat_k

   return _current_estimate;
}

void setMeasurementError(float mea_e)
{
  _err_measure = mea_e;
}

void setEstimateError(float est_e)
{
  _err_estimate = est_e;
}

void setProcessNoise(float q)
{
  _q = q;
}

float getKalmanGain() {
  return _kalman_gain;
}

float getEstimateError() {
  return _err_estimate;
}


